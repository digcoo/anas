<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slife.mapper.ActEvtLogMapper">
  <resultMap id="BaseResultMap" type="com.slife.model.ActEvtLog">
    <id column="LOG_NR_" jdbcType="BIGINT" property="logNr" />
    <result column="TYPE_" jdbcType="VARCHAR" property="type" />
    <result column="PROC_DEF_ID_" jdbcType="VARCHAR" property="procDefId" />
    <result column="PROC_INST_ID_" jdbcType="VARCHAR" property="procInstId" />
    <result column="EXECUTION_ID_" jdbcType="VARCHAR" property="executionId" />
    <result column="TASK_ID_" jdbcType="VARCHAR" property="taskId" />
    <result column="TIME_STAMP_" jdbcType="TIMESTAMP" property="timeStamp" />
    <result column="USER_ID_" jdbcType="VARCHAR" property="userId" />
    <result column="LOCK_OWNER_" jdbcType="VARCHAR" property="lockOwner" />
    <result column="LOCK_TIME_" jdbcType="TIMESTAMP" property="lockTime" />
    <result column="IS_PROCESSED_" jdbcType="TINYINT" property="isProcessed" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.slife.model.ActEvtLog">
    <result column="DATA_" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Base_Column_List">
    LOG_NR_, TYPE_, PROC_DEF_ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, TIME_STAMP_, 
    USER_ID_, LOCK_OWNER_, LOCK_TIME_, IS_PROCESSED_
  </sql>
  <sql id="Blob_Column_List">
    DATA_
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from act_evt_log
    where LOG_NR_ = #{logNr,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from act_evt_log
    where LOG_NR_ = #{logNr,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.slife.model.ActEvtLog">
    <selectKey keyProperty="logNr" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into act_evt_log (TYPE_, PROC_DEF_ID_, PROC_INST_ID_, 
      EXECUTION_ID_, TASK_ID_, TIME_STAMP_, 
      USER_ID_, LOCK_OWNER_, LOCK_TIME_, 
      IS_PROCESSED_, DATA_)
    values (#{type,jdbcType=VARCHAR}, #{procDefId,jdbcType=VARCHAR}, #{procInstId,jdbcType=VARCHAR}, 
      #{executionId,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, #{timeStamp,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=VARCHAR}, #{lockOwner,jdbcType=VARCHAR}, #{lockTime,jdbcType=TIMESTAMP}, 
      #{isProcessed,jdbcType=TINYINT}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update act_evt_log
    set LOG_NR_ = #{record.logNr,jdbcType=BIGINT},
      TYPE_ = #{record.type,jdbcType=VARCHAR},
      PROC_DEF_ID_ = #{record.procDefId,jdbcType=VARCHAR},
      PROC_INST_ID_ = #{record.procInstId,jdbcType=VARCHAR},
      EXECUTION_ID_ = #{record.executionId,jdbcType=VARCHAR},
      TASK_ID_ = #{record.taskId,jdbcType=VARCHAR},
      TIME_STAMP_ = #{record.timeStamp,jdbcType=TIMESTAMP},
      USER_ID_ = #{record.userId,jdbcType=VARCHAR},
      LOCK_OWNER_ = #{record.lockOwner,jdbcType=VARCHAR},
      LOCK_TIME_ = #{record.lockTime,jdbcType=TIMESTAMP},
      IS_PROCESSED_ = #{record.isProcessed,jdbcType=TINYINT},
      DATA_ = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.slife.model.ActEvtLog">
    update act_evt_log
    set TYPE_ = #{type,jdbcType=VARCHAR},
      PROC_DEF_ID_ = #{procDefId,jdbcType=VARCHAR},
      PROC_INST_ID_ = #{procInstId,jdbcType=VARCHAR},
      EXECUTION_ID_ = #{executionId,jdbcType=VARCHAR},
      TASK_ID_ = #{taskId,jdbcType=VARCHAR},
      TIME_STAMP_ = #{timeStamp,jdbcType=TIMESTAMP},
      USER_ID_ = #{userId,jdbcType=VARCHAR},
      LOCK_OWNER_ = #{lockOwner,jdbcType=VARCHAR},
      LOCK_TIME_ = #{lockTime,jdbcType=TIMESTAMP},
      IS_PROCESSED_ = #{isProcessed,jdbcType=TINYINT},
      DATA_ = #{data,jdbcType=LONGVARBINARY}
    where LOG_NR_ = #{logNr,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.slife.model.ActEvtLog">
    update act_evt_log
    set TYPE_ = #{type,jdbcType=VARCHAR},
      PROC_DEF_ID_ = #{procDefId,jdbcType=VARCHAR},
      PROC_INST_ID_ = #{procInstId,jdbcType=VARCHAR},
      EXECUTION_ID_ = #{executionId,jdbcType=VARCHAR},
      TASK_ID_ = #{taskId,jdbcType=VARCHAR},
      TIME_STAMP_ = #{timeStamp,jdbcType=TIMESTAMP},
      USER_ID_ = #{userId,jdbcType=VARCHAR},
      LOCK_OWNER_ = #{lockOwner,jdbcType=VARCHAR},
      LOCK_TIME_ = #{lockTime,jdbcType=TIMESTAMP},
      IS_PROCESSED_ = #{isProcessed,jdbcType=TINYINT}
    where LOG_NR_ = #{logNr,jdbcType=BIGINT}
  </update>
</mapper>