<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slife.mapper.ActRuEventSubscrMapper">
  <resultMap id="BaseResultMap" type="com.slife.model.ActRuEventSubscr">
    <id column="ID_" jdbcType="VARCHAR" property="id" />
    <result column="REV_" jdbcType="INTEGER" property="rev" />
    <result column="EVENT_TYPE_" jdbcType="VARCHAR" property="eventType" />
    <result column="EVENT_NAME_" jdbcType="VARCHAR" property="eventName" />
    <result column="EXECUTION_ID_" jdbcType="VARCHAR" property="executionId" />
    <result column="PROC_INST_ID_" jdbcType="VARCHAR" property="procInstId" />
    <result column="ACTIVITY_ID_" jdbcType="VARCHAR" property="activityId" />
    <result column="CONFIGURATION_" jdbcType="VARCHAR" property="configuration" />
    <result column="CREATED_" jdbcType="TIMESTAMP" property="created" />
    <result column="PROC_DEF_ID_" jdbcType="VARCHAR" property="procDefId" />
    <result column="TENANT_ID_" jdbcType="VARCHAR" property="tenantId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID_, REV_, EVENT_TYPE_, EVENT_NAME_, EXECUTION_ID_, PROC_INST_ID_, ACTIVITY_ID_, 
    CONFIGURATION_, CREATED_, PROC_DEF_ID_, TENANT_ID_
  </sql>
  <select id="selectByExample" parameterType="com.slife.model.ActRuEventSubscrExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from act_ru_event_subscr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from act_ru_event_subscr
    where ID_ = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from act_ru_event_subscr
    where ID_ = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.slife.model.ActRuEventSubscrExample">
    delete from act_ru_event_subscr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.slife.model.ActRuEventSubscr">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into act_ru_event_subscr (REV_, EVENT_TYPE_, EVENT_NAME_, 
      EXECUTION_ID_, PROC_INST_ID_, ACTIVITY_ID_, 
      CONFIGURATION_, CREATED_, PROC_DEF_ID_, 
      TENANT_ID_)
    values (#{rev,jdbcType=INTEGER}, #{eventType,jdbcType=VARCHAR}, #{eventName,jdbcType=VARCHAR}, 
      #{executionId,jdbcType=VARCHAR}, #{procInstId,jdbcType=VARCHAR}, #{activityId,jdbcType=VARCHAR}, 
      #{configuration,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{procDefId,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.slife.model.ActRuEventSubscr">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into act_ru_event_subscr
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rev != null">
        REV_,
      </if>
      <if test="eventType != null">
        EVENT_TYPE_,
      </if>
      <if test="eventName != null">
        EVENT_NAME_,
      </if>
      <if test="executionId != null">
        EXECUTION_ID_,
      </if>
      <if test="procInstId != null">
        PROC_INST_ID_,
      </if>
      <if test="activityId != null">
        ACTIVITY_ID_,
      </if>
      <if test="configuration != null">
        CONFIGURATION_,
      </if>
      <if test="created != null">
        CREATED_,
      </if>
      <if test="procDefId != null">
        PROC_DEF_ID_,
      </if>
      <if test="tenantId != null">
        TENANT_ID_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rev != null">
        #{rev,jdbcType=INTEGER},
      </if>
      <if test="eventType != null">
        #{eventType,jdbcType=VARCHAR},
      </if>
      <if test="eventName != null">
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="executionId != null">
        #{executionId,jdbcType=VARCHAR},
      </if>
      <if test="procInstId != null">
        #{procInstId,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=VARCHAR},
      </if>
      <if test="configuration != null">
        #{configuration,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="procDefId != null">
        #{procDefId,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.slife.model.ActRuEventSubscrExample" resultType="java.lang.Long">
    select count(*) from act_ru_event_subscr
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update act_ru_event_subscr
    <set>
      <if test="record.id != null">
        ID_ = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.rev != null">
        REV_ = #{record.rev,jdbcType=INTEGER},
      </if>
      <if test="record.eventType != null">
        EVENT_TYPE_ = #{record.eventType,jdbcType=VARCHAR},
      </if>
      <if test="record.eventName != null">
        EVENT_NAME_ = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.executionId != null">
        EXECUTION_ID_ = #{record.executionId,jdbcType=VARCHAR},
      </if>
      <if test="record.procInstId != null">
        PROC_INST_ID_ = #{record.procInstId,jdbcType=VARCHAR},
      </if>
      <if test="record.activityId != null">
        ACTIVITY_ID_ = #{record.activityId,jdbcType=VARCHAR},
      </if>
      <if test="record.configuration != null">
        CONFIGURATION_ = #{record.configuration,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        CREATED_ = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.procDefId != null">
        PROC_DEF_ID_ = #{record.procDefId,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantId != null">
        TENANT_ID_ = #{record.tenantId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update act_ru_event_subscr
    set ID_ = #{record.id,jdbcType=VARCHAR},
      REV_ = #{record.rev,jdbcType=INTEGER},
      EVENT_TYPE_ = #{record.eventType,jdbcType=VARCHAR},
      EVENT_NAME_ = #{record.eventName,jdbcType=VARCHAR},
      EXECUTION_ID_ = #{record.executionId,jdbcType=VARCHAR},
      PROC_INST_ID_ = #{record.procInstId,jdbcType=VARCHAR},
      ACTIVITY_ID_ = #{record.activityId,jdbcType=VARCHAR},
      CONFIGURATION_ = #{record.configuration,jdbcType=VARCHAR},
      CREATED_ = #{record.created,jdbcType=TIMESTAMP},
      PROC_DEF_ID_ = #{record.procDefId,jdbcType=VARCHAR},
      TENANT_ID_ = #{record.tenantId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.slife.model.ActRuEventSubscr">
    update act_ru_event_subscr
    <set>
      <if test="rev != null">
        REV_ = #{rev,jdbcType=INTEGER},
      </if>
      <if test="eventType != null">
        EVENT_TYPE_ = #{eventType,jdbcType=VARCHAR},
      </if>
      <if test="eventName != null">
        EVENT_NAME_ = #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="executionId != null">
        EXECUTION_ID_ = #{executionId,jdbcType=VARCHAR},
      </if>
      <if test="procInstId != null">
        PROC_INST_ID_ = #{procInstId,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null">
        ACTIVITY_ID_ = #{activityId,jdbcType=VARCHAR},
      </if>
      <if test="configuration != null">
        CONFIGURATION_ = #{configuration,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        CREATED_ = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="procDefId != null">
        PROC_DEF_ID_ = #{procDefId,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        TENANT_ID_ = #{tenantId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID_ = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.slife.model.ActRuEventSubscr">
    update act_ru_event_subscr
    set REV_ = #{rev,jdbcType=INTEGER},
      EVENT_TYPE_ = #{eventType,jdbcType=VARCHAR},
      EVENT_NAME_ = #{eventName,jdbcType=VARCHAR},
      EXECUTION_ID_ = #{executionId,jdbcType=VARCHAR},
      PROC_INST_ID_ = #{procInstId,jdbcType=VARCHAR},
      ACTIVITY_ID_ = #{activityId,jdbcType=VARCHAR},
      CONFIGURATION_ = #{configuration,jdbcType=VARCHAR},
      CREATED_ = #{created,jdbcType=TIMESTAMP},
      PROC_DEF_ID_ = #{procDefId,jdbcType=VARCHAR},
      TENANT_ID_ = #{tenantId,jdbcType=VARCHAR}
    where ID_ = #{id,jdbcType=VARCHAR}
  </update>
</mapper>