<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slife.mapper.ActRuVariableMapper">
  <resultMap id="BaseResultMap" type="com.slife.model.ActRuVariable">
    <id column="ID_" jdbcType="VARCHAR" property="id" />
    <result column="REV_" jdbcType="INTEGER" property="rev" />
    <result column="TYPE_" jdbcType="VARCHAR" property="type" />
    <result column="NAME_" jdbcType="VARCHAR" property="name" />
    <result column="EXECUTION_ID_" jdbcType="VARCHAR" property="executionId" />
    <result column="PROC_INST_ID_" jdbcType="VARCHAR" property="procInstId" />
    <result column="TASK_ID_" jdbcType="VARCHAR" property="taskId" />
    <result column="BYTEARRAY_ID_" jdbcType="VARCHAR" property="bytearrayId" />
    <result column="DOUBLE_" jdbcType="DOUBLE" property="double" />
    <result column="LONG_" jdbcType="BIGINT" property="long" />
    <result column="TEXT_" jdbcType="VARCHAR" property="text" />
    <result column="TEXT2_" jdbcType="VARCHAR" property="text2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID_, REV_, TYPE_, NAME_, EXECUTION_ID_, PROC_INST_ID_, TASK_ID_, BYTEARRAY_ID_, DOUBLE_, 
    LONG_, TEXT_, TEXT2_
  </sql>
  <select id="selectByExample" parameterType="com.slife.model.ActRuVariableExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from act_ru_variable
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from act_ru_variable
    where ID_ = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from act_ru_variable
    where ID_ = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.slife.model.ActRuVariableExample">
    delete from act_ru_variable
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.slife.model.ActRuVariable">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into act_ru_variable (REV_, TYPE_, NAME_, 
      EXECUTION_ID_, PROC_INST_ID_, TASK_ID_, 
      BYTEARRAY_ID_, DOUBLE_, LONG_, 
      TEXT_, TEXT2_)
    values (#{rev,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{executionId,jdbcType=VARCHAR}, #{procInstId,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, 
      #{bytearrayId,jdbcType=VARCHAR}, #{double,jdbcType=DOUBLE}, #{long,jdbcType=BIGINT}, 
      #{text,jdbcType=VARCHAR}, #{text2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.slife.model.ActRuVariable">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into act_ru_variable
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rev != null">
        REV_,
      </if>
      <if test="type != null">
        TYPE_,
      </if>
      <if test="name != null">
        NAME_,
      </if>
      <if test="executionId != null">
        EXECUTION_ID_,
      </if>
      <if test="procInstId != null">
        PROC_INST_ID_,
      </if>
      <if test="taskId != null">
        TASK_ID_,
      </if>
      <if test="bytearrayId != null">
        BYTEARRAY_ID_,
      </if>
      <if test="double != null">
        DOUBLE_,
      </if>
      <if test="long != null">
        LONG_,
      </if>
      <if test="text != null">
        TEXT_,
      </if>
      <if test="text2 != null">
        TEXT2_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rev != null">
        #{rev,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="executionId != null">
        #{executionId,jdbcType=VARCHAR},
      </if>
      <if test="procInstId != null">
        #{procInstId,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="bytearrayId != null">
        #{bytearrayId,jdbcType=VARCHAR},
      </if>
      <if test="double != null">
        #{double,jdbcType=DOUBLE},
      </if>
      <if test="long != null">
        #{long,jdbcType=BIGINT},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="text2 != null">
        #{text2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.slife.model.ActRuVariableExample" resultType="java.lang.Long">
    select count(*) from act_ru_variable
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update act_ru_variable
    <set>
      <if test="record.id != null">
        ID_ = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.rev != null">
        REV_ = #{record.rev,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        TYPE_ = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME_ = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.executionId != null">
        EXECUTION_ID_ = #{record.executionId,jdbcType=VARCHAR},
      </if>
      <if test="record.procInstId != null">
        PROC_INST_ID_ = #{record.procInstId,jdbcType=VARCHAR},
      </if>
      <if test="record.taskId != null">
        TASK_ID_ = #{record.taskId,jdbcType=VARCHAR},
      </if>
      <if test="record.bytearrayId != null">
        BYTEARRAY_ID_ = #{record.bytearrayId,jdbcType=VARCHAR},
      </if>
      <if test="record.double != null">
        DOUBLE_ = #{record.double,jdbcType=DOUBLE},
      </if>
      <if test="record.long != null">
        LONG_ = #{record.long,jdbcType=BIGINT},
      </if>
      <if test="record.text != null">
        TEXT_ = #{record.text,jdbcType=VARCHAR},
      </if>
      <if test="record.text2 != null">
        TEXT2_ = #{record.text2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update act_ru_variable
    set ID_ = #{record.id,jdbcType=VARCHAR},
      REV_ = #{record.rev,jdbcType=INTEGER},
      TYPE_ = #{record.type,jdbcType=VARCHAR},
      NAME_ = #{record.name,jdbcType=VARCHAR},
      EXECUTION_ID_ = #{record.executionId,jdbcType=VARCHAR},
      PROC_INST_ID_ = #{record.procInstId,jdbcType=VARCHAR},
      TASK_ID_ = #{record.taskId,jdbcType=VARCHAR},
      BYTEARRAY_ID_ = #{record.bytearrayId,jdbcType=VARCHAR},
      DOUBLE_ = #{record.double,jdbcType=DOUBLE},
      LONG_ = #{record.long,jdbcType=BIGINT},
      TEXT_ = #{record.text,jdbcType=VARCHAR},
      TEXT2_ = #{record.text2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.slife.model.ActRuVariable">
    update act_ru_variable
    <set>
      <if test="rev != null">
        REV_ = #{rev,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        TYPE_ = #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME_ = #{name,jdbcType=VARCHAR},
      </if>
      <if test="executionId != null">
        EXECUTION_ID_ = #{executionId,jdbcType=VARCHAR},
      </if>
      <if test="procInstId != null">
        PROC_INST_ID_ = #{procInstId,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        TASK_ID_ = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="bytearrayId != null">
        BYTEARRAY_ID_ = #{bytearrayId,jdbcType=VARCHAR},
      </if>
      <if test="double != null">
        DOUBLE_ = #{double,jdbcType=DOUBLE},
      </if>
      <if test="long != null">
        LONG_ = #{long,jdbcType=BIGINT},
      </if>
      <if test="text != null">
        TEXT_ = #{text,jdbcType=VARCHAR},
      </if>
      <if test="text2 != null">
        TEXT2_ = #{text2,jdbcType=VARCHAR},
      </if>
    </set>
    where ID_ = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.slife.model.ActRuVariable">
    update act_ru_variable
    set REV_ = #{rev,jdbcType=INTEGER},
      TYPE_ = #{type,jdbcType=VARCHAR},
      NAME_ = #{name,jdbcType=VARCHAR},
      EXECUTION_ID_ = #{executionId,jdbcType=VARCHAR},
      PROC_INST_ID_ = #{procInstId,jdbcType=VARCHAR},
      TASK_ID_ = #{taskId,jdbcType=VARCHAR},
      BYTEARRAY_ID_ = #{bytearrayId,jdbcType=VARCHAR},
      DOUBLE_ = #{double,jdbcType=DOUBLE},
      LONG_ = #{long,jdbcType=BIGINT},
      TEXT_ = #{text,jdbcType=VARCHAR},
      TEXT2_ = #{text2,jdbcType=VARCHAR}
    where ID_ = #{id,jdbcType=VARCHAR}
  </update>
</mapper>