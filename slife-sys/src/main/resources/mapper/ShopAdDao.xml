<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slife.dao.ShopAdDao">


    <resultMap id="BaseResultMap" type="com.slife.entity.ShopAd">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="items" jdbcType="VARCHAR" property="items"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="favor_num" jdbcType="INTEGER" property="favorNum"/>
        <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="shop_id" jdbcType="BIGINT" property="shopId"/>
        <result column="geohash" jdbcType="VARCHAR" property="geohash"/>
        <result column="shop_name" jdbcType="VARCHAR" property="shopName"/>
        <result column="business_id" jdbcType="BIGINT" property="businessId"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, type, title,items,favor_num,publish_time,shop_id,geohash,shop_name,business_id
    </sql>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM digcoo_anas_shop_ad where id = #{id}
    </select>

    <select id="selectAdsByGeohash" resultMap="BaseResultMap">
        <![CDATA[
          select id, type, title,items,favor_num,publish_time,shop_id,geohash, shop_name, business_id from `digcoo_anas_shop_ad` 
          where 
          status= 1 and 
          start_time<NOW() and end_time>Now() and 
          geohash like CONCAT(#{geohash},'%') 
          order by publish_time desc limit #{index},10


        ]]>
    </select>

    <select id="selectAdsByGeohashAndName" resultMap="BaseResultMap">
        <![CDATA[
          select id, type, title,items,favor_num,publish_time,shop_id,geohash, shop_name, business_id from `digcoo_anas_shop_ad` 
          where 
          status=1 and 
          start_time<NOW() and end_time>Now() and 
          geohash like CONCAT(#{geohash},'%') 
          and (title like  CONCAT('%',#{name},'%') or shop_name like CONCAT('%',#{name},'%'))
          order by
                publish_time desc limit #{index},10


        ]]>
    </select>

    <select id="selectAdsByShopId" resultMap="BaseResultMap">
        <![CDATA[


          select id, type, title,items,favor_num,publish_time,shop_id,geohash, shop_name, business_id from `digcoo_anas_shop_ad` 
          where 
          status=1 and 
          start_time<NOW() and end_time>Now() and
          shop_id = #{shopId}
          order by publish_time desc limit #{index},10


        ]]>
    </select>

    <update id="updateStatus">
		update `digcoo_anas_shop_ad` set status=#{status} where id = #{adId}
	</update>

    <select id="listForShop" resultMap="BaseResultMap">
        select id, type, title,items,favor_num,publish_time,shop_id,geohash, shop_name, business_id from `digcoo_anas_shop_ad` where
        shop_id = #{shopId} and status in
        <foreach collection="statuses" item="status" open="(" close=")" separator=",">
            #{status}
        </foreach>
        order by create_date desc limit #{index},10
    </select>
    <update id="publishShopAd">
		update `digcoo_anas_shop_ad` set status=#{status}, publish_time=#{publishTime} where id = #{adId}
	</update>

    <select id="listForShop" resultMap="BaseResultMap">
        select id, type, title, status, items,favor_num,publish_time,shop_id,geohash, shop_name, business_id from `digcoo_anas_shop_ad` where
        shop_id = #{shopId} and status in
        <foreach collection="statuses" item="status" open="(" close=")" separator=",">
            #{status}
        </foreach>
        order by create_date desc limit #{index},10
    </select>
</mapper>